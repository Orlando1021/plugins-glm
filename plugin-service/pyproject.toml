[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plugin-service"
version = "0.0.1"
# dynamic = ["version"]
description = ""
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [{ name = "Chenhui Zhang", email = "zhang.chenhui@outlook.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "numpy",
  "torch @ https://mirror.sjtu.edu.cn/pytorch-wheels/cu116/torch-1.13.1%2Bcu116-cp39-cp39-linux_x86_64.whl",
  "transformers>=4.30.2",
  "sentencepiece",
  "typer[all]",
  "fastapi",
  "uvicorn[standard]",
  "sse-starlette",
  "python-dotenv",
]

[project.urls]
Documentation = "https://github.com/unknown/plugin-service#readme"
Issues = "https://github.com/unknown/plugin-service/issues"
Source = "https://github.com/unknown/plugin-service"

[tool.hatch.version]
# path = "src/plugin_service/__about__.py"
[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
pre-install-commands = ["python -m pip install -U pip"]

[tool.hatch.envs.default.scripts]
# test = "pytest {args:tests}"
# test-cov = "coverage run -m pytest {args:tests}"
# cov-report = ["- coverage combine", "coverage report"]
# cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.dev]
dependencies = ["black", "mypy", "ruff"]

[tool.hatch.envs.dev.scripts]
# typing = "mypy --install-types --non-interactive {args:src/plugin_services tests}"
# style = ["ruff {args:.}", "black --check --diff {args:.}"]
# fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
# all = ["style", "typing"]

[tool.black]
target-version = ["py39"]
line-length = 80
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
line-length = 80
# select = [
#   "A",
#   "ARG",
#   "B",
#   "C",
#   "DTZ",
#   "E",
#   "EM",
#   "F",
#   "FBT",
#   "I",
#   "ICN",
#   "ISC",
#   "N",
#   "PLC",
#   "PLE",
#   "PLR",
#   "PLW",
#   "Q",
#   "RUF",
#   "S",
#   "T",
#   "TID",
#   "UP",
#   "W",
#   "YTT",
# ]
# ignore = [
#   # Allow non-abstract empty methods in abstract base classes
#   "B027",
#   # Allow boolean positional values in function calls, like `dict.get(... True)`
#   "FBT003",
#   # Ignore checks for possible passwords
#   "S105",
#   "S106",
#   "S107",
#   # Ignore complexity
#   "C901",
#   "PLR0911",
#   "PLR0912",
#   "PLR0913",
#   "PLR0915",
# ]
# unfixable = [
#   # Don't touch unused imports
#   "F401",
# ]

# [tool.ruff.isort]
# known-first-party = ["plugin_service"]

# [tool.ruff.flake8-tidy-imports]
# ban-relative-imports = "all"

# [tool.ruff.per-file-ignores]
# # Tests can use magic values, assertions, and relative imports
# "tests/**/*" = ["PLR2004", "S101", "TID252"]
